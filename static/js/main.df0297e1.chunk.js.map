{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosArr","App","useState","setTodos","setUserId","todoTitle","setTodoTitle","visibleAttention","setVisibleAttention","sumbitAcces","checkResult","Boolean","replace","length","emptyStringCheck","findLastIndex","prevTodos","reduce","maxID","currentTodo","Math","max","handleSubmitData","action","method","onSubmit","event","preventDefault","htmlFor","type","value","placeholder","onChange","str","inputTitle","target","trim","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df0297e1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    id,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosArr = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosArr);\n  const [userId, setUserId] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [visibleAttention, setVisibleAttention] = useState(false);\n\n  const emptyStringCheck = () => {\n    const checkResult = Boolean(todoTitle.replace(/ /g, '').length);\n\n    if (!checkResult) {\n      setTodoTitle('');\n    }\n\n    return checkResult;\n  };\n\n  const sumbitAcces = () => {\n    return userId && emptyStringCheck();\n  };\n\n  const findLastIndex = (prevTodos: Todo[]): number => (\n    prevTodos.reduce((maxID, currentTodo) => (\n      Math.max(maxID, currentTodo.id)), 0)\n  );\n\n  const checkInputString = (str: string): string => {\n    str.trim().replace(/[^a-zA-Z\\u0400-\\u04FF\\0-9 ]/g, '');\n\n    return str;\n  };\n\n  const updateTodos = () => {\n    setTodos((prevTodos) => (\n      [...prevTodos,\n        {\n          id: findLastIndex(prevTodos) + 1,\n          title: todoTitle,\n          userId,\n          completed: false,\n          user: getUser(userId),\n        }]\n    ));\n  };\n\n  const resetForm = () => {\n    setUserId(0);\n    setTodoTitle('');\n    setVisibleAttention(false);\n  };\n\n  const handleSubmitData = () => {\n    const acces = sumbitAcces();\n\n    if (acces) {\n      updateTodos();\n      resetForm();\n    } else {\n      setVisibleAttention(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSubmitData();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title_id\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            value={todoTitle}\n            id=\"title_id\"\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              const inputTitle = checkInputString(event.target.value);\n\n              setTodoTitle(inputTitle);\n            }}\n          />\n          {(!todoTitle && visibleAttention) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user_id\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            id=\"user_id\"\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setUserId(+value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(!userId && visibleAttention) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}