{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosArr","App","useState","setTodos","setUserId","todoTitle","setTodoTitle","submitAcces","setSubmitAcces","visibleAttention","setVisibleAttention","changeSumbitAcces","todo_title","user_id","findLastIndex","prevTodos","reduce","maxID","currentTodo","Math","max","handleSubmitData","action","method","onSubmit","event","preventDefault","htmlFor","type","value","placeholder","onChange","str","inputTitle","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b3a8c06.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\nexport const UserInfo = ({ user }: { user:User }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoInfo = ({ todo }: { todo:Todo }) => {\n  const {\n    completed,\n    id,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList = ({ todos }: { todos: Todo[] }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosArr = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosArr);\n  const [userId, setUserId] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [submitAcces, setSubmitAcces] = useState(false);\n  const [visibleAttention, setVisibleAttention] = useState(false);\n\n  const changeSumbitAcces = (todo_title: string, user_id: number) => {\n    if (user_id && todo_title) {\n      setSubmitAcces(true);\n    }\n  };\n\n  const findLastIndex = (prevTodos: Todo[]): number => (\n    prevTodos.reduce((maxID, currentTodo) => (\n      Math.max(maxID, currentTodo.id)), 0)\n  );\n\n  const checkInputString = (str: string): string => {\n    str.replace(/[^a-zA-Z\\u0400-\\u04FF\\0-9 ]/g, '');\n\n    return str;\n  };\n\n  const updateTodos = (todo_title: string, user_id: number) => {\n    setTodos((prevTodos) => (\n      [...prevTodos,\n        {\n          id: findLastIndex(prevTodos) + 1,\n          title: todo_title,\n          userId: user_id,\n          completed: false,\n          user: getUser(user_id),\n        }]\n    ));\n  };\n\n  const resetForm = () => {\n    setUserId(0);\n    setTodoTitle('');\n    setVisibleAttention(false);\n  };\n\n  const handleSubmitData = () => {\n    if (submitAcces) {\n      updateTodos(todoTitle, userId);\n      resetForm();\n    } else {\n      setVisibleAttention(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSubmitData();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title_id\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            value={todoTitle}\n            id=\"title_id\"\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              const inputTitle = checkInputString(event.target.value);\n\n              setTodoTitle(inputTitle);\n              changeSumbitAcces(inputTitle, userId);\n            }}\n          />\n          {(!todoTitle && visibleAttention) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user_id\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            id=\"user_id\"\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setUserId(+value);\n              changeSumbitAcces(todoTitle, +value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(!userId && visibleAttention) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}